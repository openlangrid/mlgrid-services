Here's the implementation of the bubble sort algorithm in Python:

```python
def bubble_sort(array):
    n = len(array)
    # Traverse through all array elements
    for i in range(n):
        # Last i elements are already in place
        for j in range(0, n-i-1):
            # Traverse the array from 0 to n-i-1
            # Swap if the element found is greater than the next element
            if array[j] > array[j+1] :
                array[j], array[j+1] = array[j+1], array[j]
    return array
```

The `bubble_sort` function takes an array as input and returns the sorted array. The time complexity of this algorithm is O(n^2) in the average and worst case scenarios. However, it has a space complexity of O(1) as it doesn't use any extra space except for the input array.